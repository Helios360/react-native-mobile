import React from "react";
import { View, Text } from "react-native";
const AddPost = () => {
  return (
    <View>
      <Text>this will be the addpost screen</Text>
    </View>
  );
};
export default AddPost;import React from "react";
import { View, TextInput, Pressable } from "react-native";
import { useHeaderHeight } from "@react-navigation/elements";
import { SafeAreaView } from "react-native-safe-area-context";
import Ionicons from "@expo/vector-icons/Ionicons";
import { ListOfConvos } from "../components/ListOfConvos";

export const Conversations = ({ navigation }) => {
  const [text, onChangeText] = React.useState("");

  return (
    <SafeAreaView style={{ flex: 1, paddingTop: 80, backgroundColor: "black" }}>
      <View style={{ marginHorizontal:10, position: "relative", backgroundColor: "black" }}>
        <View>
          <TextInput
            style={{
              fontSize: 14,
              paddingVertical: 12,
              paddingLeft: 40,
              marginHorizontal: 0,
              borderRadius: 10,
              backgroundColor: "#ffffff",
              shadowColor: "#000000",
              shadowOffset: { width: 0, height: 4 },
              shadowOpacity: 0.1,
              shadowRadius: 9,
            }}
            onChangeText={onChangeText}
            value={text}
            placeholder="search contacts"
          />
          <Ionicons
            name="search"
            size={24}
            color="#000000"
            style={{ position: "absolute", left: 10, top: 10 }}
          />
        </View>
        <ListOfConvos navigation={navigation} />
      </View>
    </SafeAreaView>
  );
};
export default Conversations;import React from 'react';
import { createStackNavigator } from '@react-navigation/stack';
import Conversations from './Conversations';
import Messages from './Messages';

const Stack = createStackNavigator();

export default function ConversationsNavigation() {
  return (
    <Stack.Navigator
      screenOptions={{
        headerBackTitleVisible: false,
        headerTintColor: 'white',
        headerTransparent: true,
        headerTitleAlign: 'left',
        headerTitleStyle: {
          textAlign: 'left',
          fontWeight: 'bold',
          fontFamily: 'Poppins_700Bold',
          fontSize: 24,
        },
      }}
    >
      <Stack.Screen name="Conversations" component={Conversations} />
      <Stack.Screen
        name="Messages"
        component={Messages}
        options={({ route }) => ({
          title: route.params.name,
          headerTitleStyle: {
            textAlign: 'center',
            fontFamily: 'Poppins_400Regular',
            fontSize: 20,
            position: 'absolute',
            top: 20,
            left: 120,
          },
        })}
      />
    </Stack.Navigator>
  );
}
import React, { useEffect, useState } from 'react';
import { View, Text, FlatList, Image, StyleSheet, Dimensions } from 'react-native';
import { useSelector } from 'react-redux';
import Loading from '../components/Loading';

const screenWidth = Dimensions.get('window').width;

const Favorites = () => {
  const likedImages = useSelector((state) => state.likedImages.likedImages);
  const loading = useSelector((state) => state.likedImages.loading);
  const [imageList, setImageList] = useState([]);

  useEffect(() => {
    const reversed = [...likedImages].reverse();
    setImageList(reversed);
  }, [likedImages]);

  const renderItem = ({ item }) => (
    <Image
      style={styles.image}
      source={{ uri: item.url }}
    />
  );

  if (loading) {
    return <Loading message="Loading your favorites..." />;
  }

  if (imageList.length === 0) {
    return (
      <View style={styles.emptyContainer}>
        <Text style={styles.emptyText}>No favorites yet. Start liking some images!</Text>
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <FlatList
        data={imageList}
        renderItem={renderItem}
        keyExtractor={(item) => item.itemId.toString()}
        numColumns={2}
        contentContainerStyle={styles.grid}
        showsVerticalScrollIndicator={false}
      />
    </View>
  );
};

export default Favorites;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'black',
    paddingHorizontal: 10,
    paddingTop: 20,
  },
  grid: {
    gap: 10,
    paddingBottom: 20,
  },
  image: {
    width: (screenWidth - 30) / 2,
    height: 180,
    borderRadius: 15,
    marginBottom: 10,
  },
  emptyContainer: {
    flex: 1,
    backgroundColor: 'black',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 40,
  },
  emptyText: {
    fontSize: 16,
    color: '#888',
    fontFamily: 'Poppins_400Regular',
    textAlign: 'center',
  },
});
import React from "react";
import { SafeAreaView } from "react-native-safe-area-context";
import { View, StyleSheet } from "react-native";
import ListOfAvatars from "../components/ListOfAvatars";
import ListOfCards from "../components/ListOfCards";

export default function Feed() {
  return (
    <SafeAreaView style={styles.container}>
        <ListOfAvatars />
        <ListOfCards />
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'black',
    padding: 0,
  },
});
// Login.js or Login.tsx
import React from 'react';
import { View, Text } from 'react-native';

export default function Login() {
  return (
    <View>
      <Text>This is the Login screen</Text>
    </View>
  );
}
import React from 'react';
import { View, Text, Image } from 'react-native';
import { useHeaderHeight } from '@react-navigation/elements';
import { SafeAreaView } from 'react-native-safe-area-context';
import { ListOfMessages } from '../components/ListOfMessages';

const Messages = ({ route }) => {
  const headerHeight = useHeaderHeight();
  console.log("log route in message surface", JSON.stringify(route))

  return (
    <SafeAreaView style={{ flex: 1, paddingTop: headerHeight, backgroundColor: "black"}}>
      <View
        style={{
          width: 650,
          height: 570,
          borderRadius: 155,
          borderWidth: 1,
          borderColor: "#ffffff",
          position: "absolute",
          top: 190,
          left: -290,
          transform: [{ rotate: "-45deg" }],
        }}
      />
      <View
        style={{
          position: "absolute",
          top: 50,
          left: 70,
        }}
      >
        <View
          style={{
            width: 56,
            height: 56,
            borderRadius: 35,
            borderColor: "white",
            borderWidth: 1,
            transform: [{ rotate: "-45deg" }],
            position: "absolute",
            top: -3,
            left: -3,
          }}
        />
        <Image
          style={{ height: 50, width: 50, borderRadius: 40 }}
          source={{
            uri: route.params.avatar,
          }}
        />
      </View>
      <ListOfMessages conversationId="2" />
    </SafeAreaView>
  );
};
export default Messages;import React from "react";
import { View, Text, StyleSheet } from "react-native";


export default Profile = () => {
  return (
    <View style={styles.container}>
      <Text>this will be the Profile screen</Text>
    </View>
  );
};
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'transparent',
    padding: 0,
  },
});import React from 'react';
import { View, Text, Pressable, Image } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import Ionicons from '@expo/vector-icons/Ionicons';
import { UserDetailsModalImages } from '../components/UserDetailsModalImages';

export const UserDetailsModal = ({ navigation, route }) => {
  return (
    <SafeAreaView style={{ flex: 1, paddingTop: 30 }}>
      <View
        style={{
          width: 650,
          height: 570,
          borderRadius: 155,
          borderWidth: 1,
          borderColor: '#EEF2E2',
          position: 'absolute',
          top: -80,
          left: -360,
          transform: [{ rotate: '-45deg' }],
        }}
      />
      <View
        style={{
          width: 650,
          height: 570,
          borderRadius: 155,
          borderWidth: 1,
          borderColor: '#EEF2E2',
          position: 'absolute',
          top: -80,
          left: -410,
          transform: [{ rotate: '-45deg' }],
        }}
      />
      <View
        style={{
          width: 650,
          height: 570,
          borderRadius: 155,
          position: 'absolute',
          top: -80,
          left: -460,
          backgroundColor: '#E1F6F4',
          transform: [{ rotate: '-45deg' }],
        }}
      />

      {/* Back Button */}
      <Pressable onPress={() => navigation.goBack()} style={{ flexDirection: 'row' }}>
        <Ionicons name="chevron-back-outline" size={30} color="#000000" />
        <Text
          style={{
            fontFamily: 'Poppins_400Regular',
            fontSize: 18,
          }}
        >
          Go back
        </Text>
      </Pressable>

      {/* Avatar and Name */}
      <View style={{ paddingTop: 20, marginLeft: 20, flexDirection: 'row' }}>
        <View
          style={{
            width: 76,
            height: 76,
            borderRadius: 25,
            borderColor: '#000000',
            borderWidth: 1,
            transform: [{ rotate: '-45deg' }],
            alignSelf: 'flex-start',
          }}
        >
          <View
            style={{
              overflow: 'hidden',
              alignSelf: 'flex-start',
              transform: [{ rotate: '45deg' }],
              borderRadius: 25,
              height: 67,
              width: 67,
              marginLeft: 4,
              marginTop: 4,
            }}
          >
            <Image
              style={{
                width: 95,
                height: 95,
                transform: [{ rotate: '45deg' }],
                alignSelf: 'center',
              }}
              source={{ uri: route.params.user.url }}
            />
          </View>
        </View>

        <Text
          style={{
            fontFamily: 'Poppins_700Bold',
            fontSize: 19,
            alignSelf: 'center',
            marginLeft: 30,
          }}
        >
          {route.params.user.name}
        </Text>
      </View>

      {/* Additional user images */}
      <UserDetailsModalImages />
    </SafeAreaView>
  );
};
export default UserDetailsModal;